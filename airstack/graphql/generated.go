// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
	"github.com/ethereum/go-ethereum/common"
)

// CheckFarcasterFollowingResponse is returned by CheckFarcasterFollowing on success.
type CheckFarcasterFollowingResponse struct {
	SocialFollowings CheckFarcasterFollowingSocialFollowingsSocialFollowingOutput `json:"SocialFollowings"`
}

// GetSocialFollowings returns CheckFarcasterFollowingResponse.SocialFollowings, and is useful for accessing the field via an interface.
func (v *CheckFarcasterFollowingResponse) GetSocialFollowings() CheckFarcasterFollowingSocialFollowingsSocialFollowingOutput {
	return v.SocialFollowings
}

// CheckFarcasterFollowingSocialFollowingsSocialFollowingOutput includes the requested fields of the GraphQL type SocialFollowingOutput.
type CheckFarcasterFollowingSocialFollowingsSocialFollowingOutput struct {
	Following []CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowing `json:"Following"`
}

// GetFollowing returns CheckFarcasterFollowingSocialFollowingsSocialFollowingOutput.Following, and is useful for accessing the field via an interface.
func (v *CheckFarcasterFollowingSocialFollowingsSocialFollowingOutput) GetFollowing() []CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowing {
	return v.Following
}

// CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowing includes the requested fields of the GraphQL type SocialFollowing.
type CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowing struct {
	FollowingAddress CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWallet `json:"followingAddress"`
}

// GetFollowingAddress returns CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowing.FollowingAddress, and is useful for accessing the field via an interface.
func (v *CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowing) GetFollowingAddress() CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWallet {
	return v.FollowingAddress
}

// CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWallet includes the requested fields of the GraphQL type Wallet.
type CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWallet struct {
	// Returns social profile information related to the address
	Socials []CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWalletSocialsSocial `json:"socials"`
}

// GetSocials returns CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWallet.Socials, and is useful for accessing the field via an interface.
func (v *CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWallet) GetSocials() []CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWalletSocialsSocial {
	return v.Socials
}

// CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWalletSocialsSocial includes the requested fields of the GraphQL type Social.
type CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWalletSocialsSocial struct {
	ProfileName string `json:"profileName"`
}

// GetProfileName returns CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWalletSocialsSocial.ProfileName, and is useful for accessing the field via an interface.
func (v *CheckFarcasterFollowingSocialFollowingsSocialFollowingOutputFollowingSocialFollowingFollowingAddressWalletSocialsSocial) GetProfileName() string {
	return v.ProfileName
}

// CheckTokenOwnershipResponse is returned by CheckTokenOwnership on success.
type CheckTokenOwnershipResponse struct {
	TokenBalances CheckTokenOwnershipTokenBalancesTokenBalancesOutput `json:"TokenBalances"`
}

// GetTokenBalances returns CheckTokenOwnershipResponse.TokenBalances, and is useful for accessing the field via an interface.
func (v *CheckTokenOwnershipResponse) GetTokenBalances() CheckTokenOwnershipTokenBalancesTokenBalancesOutput {
	return v.TokenBalances
}

// CheckTokenOwnershipTokenBalancesTokenBalancesOutput includes the requested fields of the GraphQL type TokenBalancesOutput.
type CheckTokenOwnershipTokenBalancesTokenBalancesOutput struct {
	TokenBalance []CheckTokenOwnershipTokenBalancesTokenBalancesOutputTokenBalance `json:"TokenBalance"`
}

// GetTokenBalance returns CheckTokenOwnershipTokenBalancesTokenBalancesOutput.TokenBalance, and is useful for accessing the field via an interface.
func (v *CheckTokenOwnershipTokenBalancesTokenBalancesOutput) GetTokenBalance() []CheckTokenOwnershipTokenBalancesTokenBalancesOutputTokenBalance {
	return v.TokenBalance
}

// CheckTokenOwnershipTokenBalancesTokenBalancesOutputTokenBalance includes the requested fields of the GraphQL type TokenBalance.
type CheckTokenOwnershipTokenBalancesTokenBalancesOutputTokenBalance struct {
	// Formatted token balance in decimals
	FormattedAmount float64 `json:"formattedAmount"`
}

// GetFormattedAmount returns CheckTokenOwnershipTokenBalancesTokenBalancesOutputTokenBalance.FormattedAmount, and is useful for accessing the field via an interface.
func (v *CheckTokenOwnershipTokenBalancesTokenBalancesOutputTokenBalance) GetFormattedAmount() float64 {
	return v.FormattedAmount
}

// GetFarcasterUserFollowersResponse is returned by GetFarcasterUserFollowers on success.
type GetFarcasterUserFollowersResponse struct {
	Socials GetFarcasterUserFollowersSocialsSocialsOutput `json:"Socials"`
}

// GetSocials returns GetFarcasterUserFollowersResponse.Socials, and is useful for accessing the field via an interface.
func (v *GetFarcasterUserFollowersResponse) GetSocials() GetFarcasterUserFollowersSocialsSocialsOutput {
	return v.Socials
}

// GetFarcasterUserFollowersSocialsSocialsOutput includes the requested fields of the GraphQL type SocialsOutput.
type GetFarcasterUserFollowersSocialsSocialsOutput struct {
	Social []GetFarcasterUserFollowersSocialsSocialsOutputSocial `json:"Social"`
}

// GetSocial returns GetFarcasterUserFollowersSocialsSocialsOutput.Social, and is useful for accessing the field via an interface.
func (v *GetFarcasterUserFollowersSocialsSocialsOutput) GetSocial() []GetFarcasterUserFollowersSocialsSocialsOutputSocial {
	return v.Social
}

// GetFarcasterUserFollowersSocialsSocialsOutputSocial includes the requested fields of the GraphQL type Social.
type GetFarcasterUserFollowersSocialsSocialsOutputSocial struct {
	FollowerCount int `json:"followerCount"`
}

// GetFollowerCount returns GetFarcasterUserFollowersSocialsSocialsOutputSocial.FollowerCount, and is useful for accessing the field via an interface.
func (v *GetFarcasterUserFollowersSocialsSocialsOutputSocial) GetFollowerCount() int {
	return v.FollowerCount
}

// GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutput includes the requested fields of the GraphQL type FarcasterChannelsOutput.
type GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutput struct {
	FarcasterChannel []GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannel `json:"FarcasterChannel"`
	PageInfo         GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo           `json:"pageInfo"`
}

// GetFarcasterChannel returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutput.FarcasterChannel, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutput) GetFarcasterChannel() []GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannel {
	return v.FarcasterChannel
}

// GetPageInfo returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutput.PageInfo, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutput) GetPageInfo() GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo {
	return v.PageInfo
}

// GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannel includes the requested fields of the GraphQL type FarcasterChannel.
type GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannel struct {
	Participants []GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipant `json:"participants"`
}

// GetParticipants returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannel.Participants, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannel) GetParticipants() []GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipant {
	return v.Participants
}

// GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipant includes the requested fields of the GraphQL type FarcasterChannelParticipant.
type GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipant struct {
	Participant GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial `json:"participant"`
}

// GetParticipant returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipant.Participant, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipant) GetParticipant() GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial {
	return v.Participant
}

// GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial includes the requested fields of the GraphQL type Social.
type GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial struct {
	UserAddress common.Address `json:"userAddress"`
	ProfileName string         `json:"profileName"`
	Fid         string         `json:"fid"`
	// blockchain addresses associated with the social profile
	UserAssociatedAddresses []common.Address `json:"userAssociatedAddresses"`
	FollowerCount           int              `json:"followerCount"`
	FollowingCount          int              `json:"followingCount"`
}

// GetUserAddress returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial.UserAddress, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial) GetUserAddress() common.Address {
	return v.UserAddress
}

// GetProfileName returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial.ProfileName, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial) GetProfileName() string {
	return v.ProfileName
}

// GetFid returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial.Fid, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial) GetFid() string {
	return v.Fid
}

// GetUserAssociatedAddresses returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial.UserAssociatedAddresses, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial) GetUserAssociatedAddresses() []common.Address {
	return v.UserAssociatedAddresses
}

// GetFollowerCount returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial.FollowerCount, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial) GetFollowerCount() int {
	return v.FollowerCount
}

// GetFollowingCount returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial.FollowingCount, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputFarcasterChannelParticipantsFarcasterChannelParticipantParticipantSocial) GetFollowingCount() int {
	return v.FollowingCount
}

// GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo includes the requested fields of the GraphQL type PageInfo.
type GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo struct {
	HasNextPage bool   `json:"hasNextPage"`
	HasPrevPage bool   `json:"hasPrevPage"`
	NextCursor  string `json:"nextCursor"`
	PrevCursor  string `json:"prevCursor"`
}

// GetHasNextPage returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// GetHasPrevPage returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo.HasPrevPage, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo) GetHasPrevPage() bool {
	return v.HasPrevPage
}

// GetNextCursor returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo.NextCursor, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo) GetNextCursor() string {
	return v.NextCursor
}

// GetPrevCursor returns GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo.PrevCursor, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutputPageInfo) GetPrevCursor() string {
	return v.PrevCursor
}

// GetFarcasterUsersByChannelResponse is returned by GetFarcasterUsersByChannel on success.
type GetFarcasterUsersByChannelResponse struct {
	FarcasterChannels GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutput `json:"FarcasterChannels"`
}

// GetFarcasterChannels returns GetFarcasterUsersByChannelResponse.FarcasterChannels, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersByChannelResponse) GetFarcasterChannels() GetFarcasterUsersByChannelFarcasterChannelsFarcasterChannelsOutput {
	return v.FarcasterChannels
}

// GetFarcasterUsersWithAssociatedAddressesResponse is returned by GetFarcasterUsersWithAssociatedAddresses on success.
type GetFarcasterUsersWithAssociatedAddressesResponse struct {
	Socials GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutput `json:"Socials"`
}

// GetSocials returns GetFarcasterUsersWithAssociatedAddressesResponse.Socials, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersWithAssociatedAddressesResponse) GetSocials() GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutput {
	return v.Socials
}

// GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutput includes the requested fields of the GraphQL type SocialsOutput.
type GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutput struct {
	Social   []GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputSocial `json:"Social"`
	PageInfo GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo `json:"pageInfo"`
}

// GetSocial returns GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutput.Social, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutput) GetSocial() []GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputSocial {
	return v.Social
}

// GetPageInfo returns GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutput.PageInfo, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutput) GetPageInfo() GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo {
	return v.PageInfo
}

// GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo includes the requested fields of the GraphQL type PageInfo.
type GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo struct {
	NextCursor  string `json:"nextCursor"`
	PrevCursor  string `json:"prevCursor"`
	HasNextPage bool   `json:"hasNextPage"`
	HasPrevPage bool   `json:"hasPrevPage"`
}

// GetNextCursor returns GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo.NextCursor, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo) GetNextCursor() string {
	return v.NextCursor
}

// GetPrevCursor returns GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo.PrevCursor, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo) GetPrevCursor() string {
	return v.PrevCursor
}

// GetHasNextPage returns GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// GetHasPrevPage returns GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo.HasPrevPage, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputPageInfo) GetHasPrevPage() bool {
	return v.HasPrevPage
}

// GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputSocial includes the requested fields of the GraphQL type Social.
type GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputSocial struct {
	UserId string `json:"userId"`
	// blockchain addresses associated with the social profile
	UserAssociatedAddresses []common.Address `json:"userAssociatedAddresses"`
}

// GetUserId returns GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputSocial.UserId, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputSocial) GetUserId() string {
	return v.UserId
}

// GetUserAssociatedAddresses returns GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputSocial.UserAssociatedAddresses, and is useful for accessing the field via an interface.
func (v *GetFarcasterUsersWithAssociatedAddressesSocialsSocialsOutputSocial) GetUserAssociatedAddresses() []common.Address {
	return v.UserAssociatedAddresses
}

// GetTokenBalancesResponse is returned by GetTokenBalances on success.
type GetTokenBalancesResponse struct {
	TokenBalances GetTokenBalancesTokenBalancesTokenBalancesOutput `json:"TokenBalances"`
}

// GetTokenBalances returns GetTokenBalancesResponse.TokenBalances, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesResponse) GetTokenBalances() GetTokenBalancesTokenBalancesTokenBalancesOutput {
	return v.TokenBalances
}

// GetTokenBalancesTokenBalancesTokenBalancesOutput includes the requested fields of the GraphQL type TokenBalancesOutput.
type GetTokenBalancesTokenBalancesTokenBalancesOutput struct {
	TokenBalance []GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalance `json:"TokenBalance"`
	PageInfo     GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo       `json:"pageInfo"`
}

// GetTokenBalance returns GetTokenBalancesTokenBalancesTokenBalancesOutput.TokenBalance, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesTokenBalancesTokenBalancesOutput) GetTokenBalance() []GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalance {
	return v.TokenBalance
}

// GetPageInfo returns GetTokenBalancesTokenBalancesTokenBalancesOutput.PageInfo, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesTokenBalancesTokenBalancesOutput) GetPageInfo() GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo {
	return v.PageInfo
}

// GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo includes the requested fields of the GraphQL type PageInfo.
type GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo struct {
	NextCursor  string `json:"nextCursor"`
	PrevCursor  string `json:"prevCursor"`
	HasNextPage bool   `json:"hasNextPage"`
	HasPrevPage bool   `json:"hasPrevPage"`
}

// GetNextCursor returns GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo.NextCursor, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo) GetNextCursor() string {
	return v.NextCursor
}

// GetPrevCursor returns GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo.PrevCursor, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo) GetPrevCursor() string {
	return v.PrevCursor
}

// GetHasNextPage returns GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo) GetHasNextPage() bool {
	return v.HasNextPage
}

// GetHasPrevPage returns GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo.HasPrevPage, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesTokenBalancesTokenBalancesOutputPageInfo) GetHasPrevPage() bool {
	return v.HasPrevPage
}

// GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalance includes the requested fields of the GraphQL type TokenBalance.
type GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalance struct {
	// Nested Query allowing to retrieve address, domain names, social profiles of the owner
	Owner GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalanceOwnerWallet `json:"owner"`
	// Token amount the address currently holds
	Amount string `json:"amount"`
}

// GetOwner returns GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalance.Owner, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalance) GetOwner() GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalanceOwnerWallet {
	return v.Owner
}

// GetAmount returns GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalance.Amount, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalance) GetAmount() string {
	return v.Amount
}

// GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalanceOwnerWallet includes the requested fields of the GraphQL type Wallet.
type GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalanceOwnerWallet struct {
	// Returns addresses associated with the identity input
	Addresses []common.Address `json:"addresses"`
}

// GetAddresses returns GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalanceOwnerWallet.Addresses, and is useful for accessing the field via an interface.
func (v *GetTokenBalancesTokenBalancesTokenBalancesOutputTokenBalanceOwnerWallet) GetAddresses() []common.Address {
	return v.Addresses
}

// GetTokenDetailsResponse is returned by GetTokenDetails on success.
type GetTokenDetailsResponse struct {
	Tokens GetTokenDetailsTokensTokensOutput `json:"Tokens"`
}

// GetTokens returns GetTokenDetailsResponse.Tokens, and is useful for accessing the field via an interface.
func (v *GetTokenDetailsResponse) GetTokens() GetTokenDetailsTokensTokensOutput { return v.Tokens }

// GetTokenDetailsTokensTokensOutput includes the requested fields of the GraphQL type TokensOutput.
type GetTokenDetailsTokensTokensOutput struct {
	Token []GetTokenDetailsTokensTokensOutputToken `json:"Token"`
}

// GetToken returns GetTokenDetailsTokensTokensOutput.Token, and is useful for accessing the field via an interface.
func (v *GetTokenDetailsTokensTokensOutput) GetToken() []GetTokenDetailsTokensTokensOutputToken {
	return v.Token
}

// GetTokenDetailsTokensTokensOutputToken includes the requested fields of the GraphQL type Token.
type GetTokenDetailsTokensTokensOutputToken struct {
	// Name of the token, mirrored from the smart contract
	Name string `json:"name"`
	// Symbol of the token, mirrored from the smart contract
	Symbol string `json:"symbol"`
	// The number of decimal places this token uses, default to 18
	Decimals int `json:"decimals"`
	// Amount of tokens in the protocol
	TotalSupply string `json:"totalSupply"`
}

// GetName returns GetTokenDetailsTokensTokensOutputToken.Name, and is useful for accessing the field via an interface.
func (v *GetTokenDetailsTokensTokensOutputToken) GetName() string { return v.Name }

// GetSymbol returns GetTokenDetailsTokensTokensOutputToken.Symbol, and is useful for accessing the field via an interface.
func (v *GetTokenDetailsTokensTokensOutputToken) GetSymbol() string { return v.Symbol }

// GetDecimals returns GetTokenDetailsTokensTokensOutputToken.Decimals, and is useful for accessing the field via an interface.
func (v *GetTokenDetailsTokensTokensOutputToken) GetDecimals() int { return v.Decimals }

// GetTotalSupply returns GetTokenDetailsTokensTokensOutputToken.TotalSupply, and is useful for accessing the field via an interface.
func (v *GetTokenDetailsTokensTokensOutputToken) GetTotalSupply() string { return v.TotalSupply }

type TokenBlockchain string

const (
	TokenBlockchainEthereum TokenBlockchain = "ethereum"
	TokenBlockchainBase     TokenBlockchain = "base"
	TokenBlockchainZora     TokenBlockchain = "zora"
	TokenBlockchainGold     TokenBlockchain = "gold"
	TokenBlockchainDegen    TokenBlockchain = "degen"
)

// __CheckFarcasterFollowingInput is used internally by genqlient
type __CheckFarcasterFollowingInput struct {
	UserId      string `json:"userId"`
	FollowingId string `json:"followingId"`
}

// GetUserId returns __CheckFarcasterFollowingInput.UserId, and is useful for accessing the field via an interface.
func (v *__CheckFarcasterFollowingInput) GetUserId() string { return v.UserId }

// GetFollowingId returns __CheckFarcasterFollowingInput.FollowingId, and is useful for accessing the field via an interface.
func (v *__CheckFarcasterFollowingInput) GetFollowingId() string { return v.FollowingId }

// __CheckTokenOwnershipInput is used internally by genqlient
type __CheckTokenOwnershipInput struct {
	OwnerAddress string          `json:"ownerAddress"`
	TokenAddress common.Address  `json:"tokenAddress"`
	Blockchain   TokenBlockchain `json:"blockchain"`
}

// GetOwnerAddress returns __CheckTokenOwnershipInput.OwnerAddress, and is useful for accessing the field via an interface.
func (v *__CheckTokenOwnershipInput) GetOwnerAddress() string { return v.OwnerAddress }

// GetTokenAddress returns __CheckTokenOwnershipInput.TokenAddress, and is useful for accessing the field via an interface.
func (v *__CheckTokenOwnershipInput) GetTokenAddress() common.Address { return v.TokenAddress }

// GetBlockchain returns __CheckTokenOwnershipInput.Blockchain, and is useful for accessing the field via an interface.
func (v *__CheckTokenOwnershipInput) GetBlockchain() TokenBlockchain { return v.Blockchain }

// __GetFarcasterUserFollowersInput is used internally by genqlient
type __GetFarcasterUserFollowersInput struct {
	UserId string `json:"userId"`
}

// GetUserId returns __GetFarcasterUserFollowersInput.UserId, and is useful for accessing the field via an interface.
func (v *__GetFarcasterUserFollowersInput) GetUserId() string { return v.UserId }

// __GetFarcasterUsersByChannelInput is used internally by genqlient
type __GetFarcasterUsersByChannelInput struct {
	ChannelId string `json:"channelId"`
	Limit     int    `json:"limit"`
	Cursor    string `json:"cursor"`
}

// GetChannelId returns __GetFarcasterUsersByChannelInput.ChannelId, and is useful for accessing the field via an interface.
func (v *__GetFarcasterUsersByChannelInput) GetChannelId() string { return v.ChannelId }

// GetLimit returns __GetFarcasterUsersByChannelInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetFarcasterUsersByChannelInput) GetLimit() int { return v.Limit }

// GetCursor returns __GetFarcasterUsersByChannelInput.Cursor, and is useful for accessing the field via an interface.
func (v *__GetFarcasterUsersByChannelInput) GetCursor() string { return v.Cursor }

// __GetFarcasterUsersWithAssociatedAddressesInput is used internally by genqlient
type __GetFarcasterUsersWithAssociatedAddressesInput struct {
	Limit  int    `json:"limit"`
	Cursor string `json:"cursor"`
}

// GetLimit returns __GetFarcasterUsersWithAssociatedAddressesInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetFarcasterUsersWithAssociatedAddressesInput) GetLimit() int { return v.Limit }

// GetCursor returns __GetFarcasterUsersWithAssociatedAddressesInput.Cursor, and is useful for accessing the field via an interface.
func (v *__GetFarcasterUsersWithAssociatedAddressesInput) GetCursor() string { return v.Cursor }

// __GetTokenBalancesInput is used internally by genqlient
type __GetTokenBalancesInput struct {
	TokenAddress common.Address  `json:"tokenAddress"`
	Blockchain   TokenBlockchain `json:"blockchain"`
	Limit        int             `json:"limit"`
	Cursor       string          `json:"cursor"`
}

// GetTokenAddress returns __GetTokenBalancesInput.TokenAddress, and is useful for accessing the field via an interface.
func (v *__GetTokenBalancesInput) GetTokenAddress() common.Address { return v.TokenAddress }

// GetBlockchain returns __GetTokenBalancesInput.Blockchain, and is useful for accessing the field via an interface.
func (v *__GetTokenBalancesInput) GetBlockchain() TokenBlockchain { return v.Blockchain }

// GetLimit returns __GetTokenBalancesInput.Limit, and is useful for accessing the field via an interface.
func (v *__GetTokenBalancesInput) GetLimit() int { return v.Limit }

// GetCursor returns __GetTokenBalancesInput.Cursor, and is useful for accessing the field via an interface.
func (v *__GetTokenBalancesInput) GetCursor() string { return v.Cursor }

// __GetTokenDetailsInput is used internally by genqlient
type __GetTokenDetailsInput struct {
	TokenAddress common.Address  `json:"tokenAddress"`
	Blockchain   TokenBlockchain `json:"blockchain"`
}

// GetTokenAddress returns __GetTokenDetailsInput.TokenAddress, and is useful for accessing the field via an interface.
func (v *__GetTokenDetailsInput) GetTokenAddress() common.Address { return v.TokenAddress }

// GetBlockchain returns __GetTokenDetailsInput.Blockchain, and is useful for accessing the field via an interface.
func (v *__GetTokenDetailsInput) GetBlockchain() TokenBlockchain { return v.Blockchain }

// The query or mutation executed by CheckFarcasterFollowing.
const CheckFarcasterFollowing_Operation = `
query CheckFarcasterFollowing ($userId: Identity, $followingId: Identity) {
	SocialFollowings(input: {filter:{identity:{_eq:$userId},dappName:{_eq:farcaster}},blockchain:ALL,limit:1}) {
		Following {
			followingAddress {
				socials(input: {filter:{identity:{_eq:$followingId},dappName:{_eq:farcaster}}}) {
					profileName
				}
			}
		}
	}
}
`

// always prefix userId and followingId with "fc_fid:<userId || followingId>"
func CheckFarcasterFollowing(
	ctx context.Context,
	client graphql.Client,
	userId string,
	followingId string,
) (*CheckFarcasterFollowingResponse, error) {
	req := &graphql.Request{
		OpName: "CheckFarcasterFollowing",
		Query:  CheckFarcasterFollowing_Operation,
		Variables: &__CheckFarcasterFollowingInput{
			UserId:      userId,
			FollowingId: followingId,
		},
	}
	var err error

	var data CheckFarcasterFollowingResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by CheckTokenOwnership.
const CheckTokenOwnership_Operation = `
query CheckTokenOwnership ($ownerAddress: Identity!, $tokenAddress: Address!, $blockchain: TokenBlockchain!) {
	TokenBalances(input: {filter:{owner:{_eq:$ownerAddress},tokenAddress:{_eq:$tokenAddress}},blockchain:$blockchain}) {
		TokenBalance {
			formattedAmount
		}
	}
}
`

func CheckTokenOwnership(
	ctx context.Context,
	client graphql.Client,
	ownerAddress string,
	tokenAddress common.Address,
	blockchain TokenBlockchain,
) (*CheckTokenOwnershipResponse, error) {
	req := &graphql.Request{
		OpName: "CheckTokenOwnership",
		Query:  CheckTokenOwnership_Operation,
		Variables: &__CheckTokenOwnershipInput{
			OwnerAddress: ownerAddress,
			TokenAddress: tokenAddress,
			Blockchain:   blockchain,
		},
	}
	var err error

	var data CheckTokenOwnershipResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetFarcasterUserFollowers.
const GetFarcasterUserFollowers_Operation = `
query GetFarcasterUserFollowers ($userId: String) {
	Socials(input: {filter:{dappName:{_eq:farcaster},userId:{_eq:$userId}},blockchain:ethereum}) {
		Social {
			followerCount
		}
	}
}
`

func GetFarcasterUserFollowers(
	ctx context.Context,
	client graphql.Client,
	userId string,
) (*GetFarcasterUserFollowersResponse, error) {
	req := &graphql.Request{
		OpName: "GetFarcasterUserFollowers",
		Query:  GetFarcasterUserFollowers_Operation,
		Variables: &__GetFarcasterUserFollowersInput{
			UserId: userId,
		},
	}
	var err error

	var data GetFarcasterUserFollowersResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetFarcasterUsersByChannel.
const GetFarcasterUsersByChannel_Operation = `
query GetFarcasterUsersByChannel ($channelId: String, $limit: Int, $cursor: String) {
	FarcasterChannels(input: {filter:{channelId:{_eq:$channelId}},blockchain:ALL,limit:$limit,cursor:$cursor}) {
		FarcasterChannel {
			participants {
				participant {
					userAddress
					profileName
					fid: userId
					userAssociatedAddresses
					followerCount
					followingCount
				}
			}
		}
		pageInfo {
			hasNextPage
			hasPrevPage
			nextCursor
			prevCursor
		}
	}
}
`

func GetFarcasterUsersByChannel(
	ctx context.Context,
	client graphql.Client,
	channelId string,
	limit int,
	cursor string,
) (*GetFarcasterUsersByChannelResponse, error) {
	req := &graphql.Request{
		OpName: "GetFarcasterUsersByChannel",
		Query:  GetFarcasterUsersByChannel_Operation,
		Variables: &__GetFarcasterUsersByChannelInput{
			ChannelId: channelId,
			Limit:     limit,
			Cursor:    cursor,
		},
	}
	var err error

	var data GetFarcasterUsersByChannelResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetFarcasterUsersWithAssociatedAddresses.
const GetFarcasterUsersWithAssociatedAddresses_Operation = `
query GetFarcasterUsersWithAssociatedAddresses ($limit: Int, $cursor: String) {
	Socials(input: {filter:{dappName:{_eq:farcaster}},blockchain:ethereum,limit:$limit,cursor:$cursor}) {
		Social {
			userId
			userAssociatedAddresses
		}
		pageInfo {
			nextCursor
			prevCursor
			hasNextPage
			hasPrevPage
		}
	}
}
`

func GetFarcasterUsersWithAssociatedAddresses(
	ctx context.Context,
	client graphql.Client,
	limit int,
	cursor string,
) (*GetFarcasterUsersWithAssociatedAddressesResponse, error) {
	req := &graphql.Request{
		OpName: "GetFarcasterUsersWithAssociatedAddresses",
		Query:  GetFarcasterUsersWithAssociatedAddresses_Operation,
		Variables: &__GetFarcasterUsersWithAssociatedAddressesInput{
			Limit:  limit,
			Cursor: cursor,
		},
	}
	var err error

	var data GetFarcasterUsersWithAssociatedAddressesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTokenBalances.
const GetTokenBalances_Operation = `
query GetTokenBalances ($tokenAddress: Address!, $blockchain: TokenBlockchain!, $limit: Int, $cursor: String) {
	TokenBalances(input: {filter:{tokenAddress:{_eq:$tokenAddress}},blockchain:$blockchain,limit:$limit,cursor:$cursor}) {
		TokenBalance {
			owner {
				addresses
			}
			amount
		}
		pageInfo {
			nextCursor
			prevCursor
			hasNextPage
			hasPrevPage
		}
	}
}
`

func GetTokenBalances(
	ctx context.Context,
	client graphql.Client,
	tokenAddress common.Address,
	blockchain TokenBlockchain,
	limit int,
	cursor string,
) (*GetTokenBalancesResponse, error) {
	req := &graphql.Request{
		OpName: "GetTokenBalances",
		Query:  GetTokenBalances_Operation,
		Variables: &__GetTokenBalancesInput{
			TokenAddress: tokenAddress,
			Blockchain:   blockchain,
			Limit:        limit,
			Cursor:       cursor,
		},
	}
	var err error

	var data GetTokenBalancesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by GetTokenDetails.
const GetTokenDetails_Operation = `
query GetTokenDetails ($tokenAddress: Address!, $blockchain: TokenBlockchain!) {
	Tokens(input: {filter:{address:{_eq:$tokenAddress}},blockchain:$blockchain}) {
		Token {
			name
			symbol
			decimals
			totalSupply
		}
	}
}
`

func GetTokenDetails(
	ctx context.Context,
	client graphql.Client,
	tokenAddress common.Address,
	blockchain TokenBlockchain,
) (*GetTokenDetailsResponse, error) {
	req := &graphql.Request{
		OpName: "GetTokenDetails",
		Query:  GetTokenDetails_Operation,
		Variables: &__GetTokenDetailsInput{
			TokenAddress: tokenAddress,
			Blockchain:   blockchain,
		},
	}
	var err error

	var data GetTokenDetailsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
